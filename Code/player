const sword = {
  XPosLastFrame: 0,
  YPosLastFrame: 0,
  updateX: () => (sword.XPosLastFrame = mouseX),
  updateY: () => (sword.YPosLastFrame = mouseY),
  getSpeed: () =>
    dist(mouseX, mouseY, sword.XPosLastFrame, sword.YPosLastFrame),
};
function testCollision() {
  for (let i = 0; i < Interactable.length; i++) {
    if (Interactable[i] != undefined) {
      if (
        dist(
          mouseX - 40,
          mouseY - 40,
          Interactable[i].XPos,
          Interactable[i].YPos
        ) < 50 &&
        sword.getSpeed() > 30
      ) {
        interactable.cut(i);
      }
    }
  }
}
const stats = {
  health: 5,
  score: 0,
  fallen: 0, //game ends after fallen reaches 3 to prevent easily advancing waves by afking. This stat resets every wave.
  wave: 20,
};
function updateLastPosXYSword() {
  sword.updateX();
  sword.updateY();
}
function waves() {
  setTimeout(waves, 10000);
  stats.fallen = 0;
  stats.wave++;
  displayWaves = true;
  setTimeout(() => (displayWaves = false), 2000);
}
const sounds = {
  titleScreen: () => titleScreen.play(),
  fruitSlice: () => fruitSlice.play(),
  bombSlice: () => bombSlice.play(),
};
function mouseClicked() {spawnBomb();}
